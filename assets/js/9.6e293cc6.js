(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{519:function(e,n,r){e.exports=r.p+"assets/img/maven_idea_addArchetype.f6d0480e.png"},520:function(e,n,r){e.exports=r.p+"assets/img/maven_idea_addArchetype_newProject_1.bf7a2157.png"},521:function(e,n,r){e.exports=r.p+"assets/img/maven_idea_addArchetype_newProject_2.402fbc15.png"},522:function(e,n,r){e.exports=r.p+"assets/img/maven_idea_addArchetype_newProject_3.ee34a0f0.png"},965:function(e,n,r){"use strict";r.r(n);var t=r(56),a=Object(t.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"maven"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven"}},[e._v("#")]),e._v(" Maven")]),e._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#maven"}},[e._v("Maven")]),t("ul",[t("li",[t("a",{attrs:{href:"#参考"}},[e._v("参考")])]),t("li",[t("a",{attrs:{href:"#pom-xml属性详解"}},[e._v("pom.xml属性详解")]),t("ul",[t("li",[t("a",{attrs:{href:"#配置详解"}},[e._v("配置详解")])]),t("li",[t("a",{attrs:{href:"#pom-xml中的内置变量"}},[e._v("pom.xml中的内置变量")])]),t("li",[t("a",{attrs:{href:"#相关元素介绍"}},[e._v("相关元素介绍")]),t("ul",[t("li",[t("a",{attrs:{href:"#optional-元素"}},[e._v("optional 元素")])]),t("li",[t("a",{attrs:{href:"#scope元素"}},[e._v("scope元素")]),t("ul",[t("li",[t("a",{attrs:{href:"#scope-依赖的传递性"}},[e._v("scope 依赖的传递性")])])])])])])])]),t("li",[t("a",{attrs:{href:"#脚手架"}},[e._v("脚手架")]),t("ul",[t("li",[t("a",{attrs:{href:"#创建archetype"}},[e._v("创建Archetype")]),t("ul",[t("li",[t("a",{attrs:{href:"#创建archetype"}},[e._v("创建Archetype")]),t("ul",[t("li",[t("a",{attrs:{href:"#完善补充"}},[e._v("完善补充")])])])]),t("li",[t("a",{attrs:{href:"#修改父pom"}},[e._v("修改父pom")])]),t("li",[t("a",{attrs:{href:"#修改module"}},[e._v("修改module")])]),t("li",[t("a",{attrs:{href:"#补充修改"}},[e._v("补充修改")])]),t("li",[t("a",{attrs:{href:"#archetype-metadata-修改"}},[e._v("archetype-metadata 修改")])])])]),t("li",[t("a",{attrs:{href:"#使用archetype"}},[e._v("使用Archetype")]),t("ul",[t("li",[t("a",{attrs:{href:"#命令行"}},[e._v("命令行")]),t("ul",[t("li",[t("a",{attrs:{href:"#完整形式"}},[e._v("完整形式")])]),t("li",[t("a",{attrs:{href:"#参数介绍"}},[e._v("参数介绍")])])])]),t("li",[t("a",{attrs:{href:"#idea"}},[e._v("IDEA")])])])]),t("li",[t("a",{attrs:{href:"#异常-invoker-process-ended-with-result-different-than-0"}},[e._v("异常：Invoker process ended with result different than 0!")])])])]),t("li",[t("a",{attrs:{href:"#私服"}},[e._v("私服")]),t("ul",[t("li",[t("a",{attrs:{href:"#安装"}},[e._v("安装")]),t("ul",[t("li",[t("a",{attrs:{href:"#docker安装maven私服"}},[e._v("Docker安装Maven私服")])])])]),t("li",[t("a",{attrs:{href:"#仓库的类型"}},[e._v("仓库的类型")])]),t("li",[t("a",{attrs:{href:"#使用"}},[e._v("使用")]),t("ul",[t("li",[t("a",{attrs:{href:"#准备工作"}},[e._v("准备工作")])]),t("li",[t("a",{attrs:{href:"#本地操作"}},[e._v("本地操作")])]),t("li",[t("a",{attrs:{href:"#测试依赖"}},[e._v("测试依赖")])])])])])])])])])]),t("p"),e._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),t("ul",[t("li",[e._v("Maven权威指南中文版.pdf")])]),e._v(" "),t("h2",{attrs:{id:"pom-xml属性详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml属性详解"}},[e._v("#")]),e._v(" pom.xml属性详解")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.jianshu.com/p/0a988ae317b0",target:"_blank",rel:"noopener noreferrer"}},[e._v("maven之pom.xml属性详解"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"配置详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置详解"}},[e._v("#")]),e._v(" 配置详解")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">\n    \x3c!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。 坐标包括group ID，artifact ID和 version。--\x3e\n    <parent>\n        \x3c!--被继承的父项目的构件标识符--\x3e\n        <artifactId/>\n        \x3c!--被继承的父项目的全球唯一标识符--\x3e\n        <groupId/>\n        \x3c!--被继承的父项目的版本--\x3e\n        <version/>\n        \x3c!--父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项目的pom，其次在文件系统的这个位置（relativePath位置），然后在本地仓库，最后在远程仓库寻找父项目的pom。--\x3e\n        <relativePath/>\n    </parent>\n    \x3c!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。--\x3e\n    <modelVersion>4.0.0</modelVersion>\n    \x3c!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， 如com.mycompany.app生成的相对路径为：/com/mycompany/app--\x3e\n    <groupId>asia.banseon</groupId>\n    \x3c!--构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID和groupID；在某个特定的group ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源码，二进制发布和WARs等。--\x3e\n    <artifactId>banseon-maven2</artifactId>\n    \x3c!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型--\x3e\n    <packaging>jar</packaging>\n    \x3c!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号--\x3e\n    <version>1.0-SNAPSHOT</version>\n    \x3c!--项目的名称, Maven产生的文档用--\x3e\n    <name>banseon-maven</name>\n    \x3c!--项目主页的URL, Maven产生的文档用--\x3e\n    <url>http://www.baidu.com/banseon</url>\n    \x3c!--项目的详细描述, Maven 产生的文档用。  当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标签）， 不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。--\x3e\n    <description>A maven project to study maven.</description>\n    \x3c!--描述了这个项目构建环境中的前提条件。--\x3e\n    <prerequisites>\n        \x3c!--构建该项目或使用该插件所需要的Maven的最低版本--\x3e\n        <maven/>\n    </prerequisites>\n    \x3c!--项目的问题管理系统(Bugzilla, Jira, Scarab,或任何你喜欢的问题管理系统)的名称和URL，本例为 jira--\x3e\n    <issueManagement>\n        \x3c!--问题管理系统（例如jira）的名字，--\x3e\n        <system>jira</system>\n        \x3c!--该项目使用的问题管理系统的URL--\x3e\n        <url>http://jira.baidu.com/banseon</url>\n    </issueManagement>\n    \x3c!--项目持续集成信息--\x3e\n    <ciManagement>\n        \x3c!--持续集成系统的名字，例如continuum--\x3e\n        <system/>\n        \x3c!--该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。--\x3e\n        <url/>\n        \x3c!--构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告）--\x3e\n        <notifiers>\n            \x3c!--配置一种方式，当构建中断时，以该方式通知用户/开发者--\x3e\n            <notifier>\n                \x3c!--传送通知的途径--\x3e\n                <type/>\n                \x3c!--发生错误时是否通知--\x3e\n                <sendOnError/>\n                \x3c!--构建失败时是否通知--\x3e\n                <sendOnFailure/>\n                \x3c!--构建成功时是否通知--\x3e\n                <sendOnSuccess/>\n                \x3c!--发生警告时是否通知--\x3e\n                <sendOnWarning/>\n                \x3c!--不赞成使用。通知发送到哪里--\x3e\n                <address/>\n                \x3c!--扩展配置项--\x3e\n                <configuration/>\n            </notifier>\n        </notifiers>\n    </ciManagement>\n    \x3c!--项目创建年份，4位数字。当产生版权信息时需要使用这个值。--\x3e\n    <inceptionYear/>\n    \x3c!--项目相关邮件列表信息--\x3e\n    <mailingLists>\n        \x3c!--该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。--\x3e\n        <mailingList>\n            \x3c!--邮件的名称--\x3e\n            <name>Demo</name>\n            \x3c!--发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--\x3e\n            <post>banseon@126.com</post>\n            \x3c!--订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--\x3e\n            <subscribe>banseon@126.com</subscribe>\n            \x3c!--取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--\x3e\n            <unsubscribe>banseon@126.com</unsubscribe>\n            \x3c!--你可以浏览邮件信息的URL--\x3e\n            <archive>http:/hi.baidu.com/banseon/demo/dev/</archive>\n        </mailingList>\n    </mailingLists>\n    \x3c!--项目开发者列表--\x3e\n    <developers>\n        \x3c!--某个项目开发者的信息--\x3e\n        <developer>\n            \x3c!--SCM里项目开发者的唯一标识符--\x3e\n            <id>HELLO WORLD</id>\n            \x3c!--项目开发者的全名--\x3e\n            <name>banseon</name>\n            \x3c!--项目开发者的email--\x3e\n            <email>banseon@126.com</email>\n            \x3c!--项目开发者的主页的URL--\x3e\n            <url/>\n            \x3c!--项目开发者在项目中扮演的角色，角色元素描述了各种角色--\x3e\n            <roles>\n                <role>Project Manager</role>\n                <role>Architect</role>\n            </roles>\n            \x3c!--项目开发者所属组织--\x3e\n            <organization>demo</organization>\n            \x3c!--项目开发者所属组织的URL--\x3e\n            <organizationUrl>http://hi.baidu.com/banseon</organizationUrl>\n            \x3c!--项目开发者属性，如即时消息如何处理等--\x3e\n            <properties>\n                <dept>No</dept>\n            </properties>\n            \x3c!--项目开发者所在时区， -11到12范围内的整数。--\x3e\n            <timezone>-5</timezone>\n        </developer>\n    </developers>\n    \x3c!--项目的其他贡献者列表--\x3e\n    <contributors>\n        \x3c!--项目的其他贡献者。参见developers/developer元素--\x3e\n        <contributor>\n            <name/>\n            <email/>\n            <url/>\n            <organization/>\n            <organizationUrl/>\n            <roles/>\n            <timezone/>\n            <properties/>\n        </contributor>\n    </contributors>\n    \x3c!--该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。如果列出多个license，用户可以选择它们中的一个而不是接受所有license。--\x3e\n    <licenses>\n        \x3c!--描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。--\x3e\n        <license>\n            \x3c!--license用于法律上的名称--\x3e\n            <name>Apache 2</name>\n            \x3c!--官方的license正文页面的URL--\x3e\n            <url>http://www.baidu.com/banseon/LICENSE-2.0.txt</url>\n            \x3c!--项目分发的主要方式：\n              repo，可以从Maven库下载\n              manual， 用户必须手动下载和安装依赖--\x3e\n            <distribution>repo</distribution>\n            \x3c!--关于license的补充信息--\x3e\n            <comments>A business-friendly OSS license</comments>\n        </license>\n    </licenses>\n    \x3c!--SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。--\x3e\n    <scm>\n        \x3c!--SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。--\x3e\n        <connection>\n            scm:svn:http://svn.baidu.com/banseon/maven/banseon/banseon-maven2-trunk(dao-trunk)\n        </connection>\n        \x3c!--给开发者使用的，类似connection元素。即该连接不仅仅只读--\x3e\n        <developerConnection>\n            scm:svn:http://svn.baidu.com/banseon/maven/banseon/dao-trunk\n        </developerConnection>\n        \x3c!--当前代码的标签，在开发阶段默认为HEAD--\x3e\n        <tag/>\n        \x3c!--指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。--\x3e\n        <url>http://svn.baidu.com/banseon</url>\n    </scm>\n    \x3c!--描述项目所属组织的各种属性。Maven产生的文档用--\x3e\n    <organization>\n        \x3c!--组织的全名--\x3e\n        <name>demo</name>\n        \x3c!--组织主页的URL--\x3e\n        <url>http://www.baidu.com/banseon</url>\n    </organization>\n    \x3c!--构建项目需要的信息--\x3e\n    <build>\n        \x3c!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--\x3e\n        <sourceDirectory/>\n        \x3c!--该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容 会被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。--\x3e\n        <scriptSourceDirectory/>\n        \x3c!--该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--\x3e\n        <testSourceDirectory/>\n        \x3c!--被编译过的应用程序class文件存放的目录。--\x3e\n        <outputDirectory/>\n        \x3c!--被编译过的测试class文件存放的目录。--\x3e\n        <testOutputDirectory/>\n        \x3c!--使用来自该项目的一系列构建扩展--\x3e\n        <extensions>\n            \x3c!--描述使用到的构建扩展。--\x3e\n            <extension>\n                \x3c!--构建扩展的groupId--\x3e\n                <groupId/>\n                \x3c!--构建扩展的artifactId--\x3e\n                <artifactId/>\n                \x3c!--构建扩展的版本--\x3e\n                <version/>\n            </extension>\n        </extensions>\n        \x3c!--当项目没有规定目标（Maven2 叫做阶段）时的默认值--\x3e\n        <defaultGoal/>\n        \x3c!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。--\x3e\n        <resources>\n            \x3c!--这个元素描述了项目相关或测试相关的所有资源路径--\x3e\n            <resource>\n                \x3c!--描述了资源的目标路径。该路径相对target/classes目录（例如${project.build.outputDirectory}）。举个例子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为org/apache/maven/messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。--\x3e\n                <targetPath/>\n                \x3c!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。--\x3e\n                <filtering/>\n                \x3c!--描述存放资源的目录，该路径相对POM路径--\x3e\n                <directory/>\n                \x3c!--包含的模式列表，例如**/*.xml.--\x3e\n                <includes/>\n                \x3c!--排除的模式列表，例如**/*.xml--\x3e\n                <excludes/>\n            </resource>\n        </resources>\n        \x3c!--这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。--\x3e\n        <testResources>\n            \x3c!--这个元素描述了测试相关的所有资源路径，参见build/resources/resource元素的说明--\x3e\n            <testResource>\n                <targetPath/>\n                <filtering/>\n                <directory/>\n                <includes/>\n                <excludes/>\n            </testResource>\n        </testResources>\n        \x3c!--构建产生的所有文件存放的目录--\x3e\n        <directory/>\n        \x3c!--产生的构件的文件名，默认值是${artifactId}-${version}。--\x3e\n        <finalName/>\n        \x3c!--当filtering开关打开时，使用到的过滤器属性文件列表--\x3e\n        <filters/>\n        \x3c!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置--\x3e\n        <pluginManagement>\n            \x3c!--使用的插件列表 。--\x3e\n            <plugins>\n                \x3c!--plugin元素包含描述插件所需要的信息。--\x3e\n                <plugin>\n                    \x3c!--插件在仓库里的group ID--\x3e\n                    <groupId/>\n                    \x3c!--插件在仓库里的artifact ID--\x3e\n                    <artifactId/>\n                    \x3c!--被使用的插件的版本（或版本范围）--\x3e\n                    <version/>\n                    \x3c!--是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该元素才被设置成enabled。--\x3e\n                    <extensions/>\n                    \x3c!--在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。--\x3e\n                    <executions>\n                        \x3c!--execution元素包含了插件执行需要的信息--\x3e\n                        <execution>\n                            \x3c!--执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标--\x3e\n                            <id/>\n                            \x3c!--绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段--\x3e\n                            <phase/>\n                            \x3c!--配置的执行目标--\x3e\n                            <goals/>\n                            \x3c!--配置是否被传播到子POM--\x3e\n                            <inherited/>\n                            \x3c!--作为DOM对象的配置--\x3e\n                            <configuration/>\n                        </execution>\n                    </executions>\n                    \x3c!--项目引入插件所需要的额外依赖--\x3e\n                    <dependencies>\n                        \x3c!--参见dependencies/dependency元素--\x3e\n                        <dependency>\n                            ......\n                        </dependency>\n                    </dependencies>\n                    \x3c!--任何配置是否被传播到子项目--\x3e\n                    <inherited/>\n                    \x3c!--作为DOM对象的配置--\x3e\n                    <configuration/>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n        \x3c!--使用的插件列表--\x3e\n        <plugins>\n            \x3c!--参见build/pluginManagement/plugins/plugin元素--\x3e\n            <plugin>\n                <groupId/>\n                <artifactId/>\n                <version/>\n                <extensions/>\n                <executions>\n                    <execution>\n                        <id/>\n                        <phase/>\n                        <goals/>\n                        <inherited/>\n                        <configuration/>\n                    </execution>\n                </executions>\n                <dependencies>\n                    \x3c!--参见dependencies/dependency元素--\x3e\n                    <dependency>\n                        ......\n                    </dependency>\n                </dependencies>\n                <goals/>\n                <inherited/>\n                <configuration/>\n            </plugin>\n        </plugins>\n    </build>\n    \x3c!--在列的项目构建profile，如果被激活，会修改构建处理--\x3e\n    <profiles>\n        \x3c!--根据环境参数或命令行参数激活某个构建处理--\x3e\n        <profile>\n            \x3c!--构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。--\x3e\n            <id/>\n            \x3c!--自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它\n            能够在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元素并不是激活profile的唯一方式。--\x3e\n            <activation>\n                \x3c!--profile默认是否激活的标志--\x3e\n                <activeByDefault/>\n                \x3c!--当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本不是以1.4开头的JDK。--\x3e\n                <jdk/>\n                \x3c!--当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。--\x3e\n                <os>\n                    \x3c!--激活profile的操作系统的名字--\x3e\n                    <name>Windows XP</name>\n                    \x3c!--激活profile的操作系统所属家族(如 \'windows\')--\x3e\n                    <family>Windows</family>\n                    \x3c!--激活profile的操作系统体系结构 --\x3e\n                    <arch>x86</arch>\n                    \x3c!--激活profile的操作系统版本--\x3e\n                    <version>5.1.2600</version>\n                </os>\n                \x3c!--如果Maven检测到某一个属性（其值可以在POM中通过${名称}引用），其拥有对应的名称和值，Profile就会被激活。如果值\n                字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹配属性值字段--\x3e\n                <property>\n                    \x3c!--激活profile的属性的名称--\x3e\n                    <name>mavenVersion</name>\n                    \x3c!--激活profile的属性的值--\x3e\n                    <value>2.0.3</value>\n                </property>\n                \x3c!--提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活\n                profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。--\x3e\n                <file>\n                    \x3c!--如果指定的文件存在，则激活profile。--\x3e\n                    <exists>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/</exists>\n                    \x3c!--如果指定的文件不存在，则激活profile。--\x3e\n                    <missing>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/</missing>\n                </file>\n            </activation>\n            \x3c!--构建项目所需要的信息。参见build元素--\x3e\n            <build>\n                <defaultGoal/>\n                <resources>\n                    <resource>\n                        <targetPath/>\n                        <filtering/>\n                        <directory/>\n                        <includes/>\n                        <excludes/>\n                    </resource>\n                </resources>\n                <testResources>\n                    <testResource>\n                        <targetPath/>\n                        <filtering/>\n                        <directory/>\n                        <includes/>\n                        <excludes/>\n                    </testResource>\n                </testResources>\n                <directory/>\n                <finalName/>\n                <filters/>\n                <pluginManagement>\n                    <plugins>\n                        \x3c!--参见build/pluginManagement/plugins/plugin元素--\x3e\n                        <plugin>\n                            <groupId/>\n                            <artifactId/>\n                            <version/>\n                            <extensions/>\n                            <executions>\n                                <execution>\n                                    <id/>\n                                    <phase/>\n                                    <goals/>\n                                    <inherited/>\n                                    <configuration/>\n                                </execution>\n                            </executions>\n                            <dependencies>\n                                \x3c!--参见dependencies/dependency元素--\x3e\n                                <dependency>\n                                    ......\n                                </dependency>\n                            </dependencies>\n                            <goals/>\n                            <inherited/>\n                            <configuration/>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n                <plugins>\n                    \x3c!--参见build/pluginManagement/plugins/plugin元素--\x3e\n                    <plugin>\n                        <groupId/>\n                        <artifactId/>\n                        <version/>\n                        <extensions/>\n                        <executions>\n                            <execution>\n                                <id/>\n                                <phase/>\n                                <goals/>\n                                <inherited/>\n                                <configuration/>\n                            </execution>\n                        </executions>\n                        <dependencies>\n                            \x3c!--参见dependencies/dependency元素--\x3e\n                            <dependency>\n                                ......\n                            </dependency>\n                        </dependencies>\n                        <goals/>\n                        <inherited/>\n                        <configuration/>\n                    </plugin>\n                </plugins>\n            </build>\n            \x3c!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--\x3e\n            <modules/>\n            \x3c!--发现依赖和扩展的远程仓库列表。--\x3e\n            <repositories>\n                \x3c!--参见repositories/repository元素--\x3e\n                <repository>\n                    <releases>\n                        <enabled/>\n                        <updatePolicy/>\n                        <checksumPolicy/>\n                    </releases>\n                    <snapshots>\n                        <enabled/>\n                        <updatePolicy/>\n                        <checksumPolicy/>\n                    </snapshots>\n                    <id/>\n                    <name/>\n                    <url/>\n                    <layout/>\n                </repository>\n            </repositories>\n            \x3c!--发现插件的远程仓库列表，这些插件用于构建和报表--\x3e\n            <pluginRepositories>\n                \x3c!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--\x3e\n                <pluginRepository>\n                    <releases>\n                        <enabled/>\n                        <updatePolicy/>\n                        <checksumPolicy/>\n                    </releases>\n                    <snapshots>\n                        <enabled/>\n                        <updatePolicy/>\n                        <checksumPolicy/>\n                    </snapshots>\n                    <id/>\n                    <name/>\n                    <url/>\n                    <layout/>\n                </pluginRepository>\n            </pluginRepositories>\n            \x3c!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--\x3e\n            <dependencies>\n                \x3c!--参见dependencies/dependency元素--\x3e\n                <dependency>\n                    ......\n                </dependency>\n            </dependencies>\n            \x3c!--不赞成使用. 现在Maven忽略该元素.--\x3e\n            <reports/>\n            \x3c!--该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。参见reporting元素--\x3e\n            <reporting>\n                ......\n            </reporting>\n            \x3c!--参见dependencyManagement元素--\x3e\n            <dependencyManagement>\n                <dependencies>\n                    \x3c!--参见dependencies/dependency元素--\x3e\n                    <dependency>\n                        ......\n                    </dependency>\n                </dependencies>\n            </dependencyManagement>\n            \x3c!--参见distributionManagement元素--\x3e\n            <distributionManagement>\n                ......\n            </distributionManagement>\n            \x3c!--参见properties元素--\x3e\n            <properties/>\n        </profile>\n    </profiles>\n    \x3c!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--\x3e\n    <modules/>\n    \x3c!--发现依赖和扩展的远程仓库列表。--\x3e\n    <repositories>\n        \x3c!--包含需要连接到远程仓库的信息--\x3e\n        <repository>\n            \x3c!--如何处理远程仓库里发布版本的下载--\x3e\n            <releases>\n                \x3c!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --\x3e\n                <enabled/>\n                \x3c!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。--\x3e\n                <updatePolicy/>\n                \x3c!--当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。--\x3e\n                <checksumPolicy/>\n            </releases>\n            \x3c!--如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素--\x3e\n            <snapshots>\n                <enabled/>\n                <updatePolicy/>\n                <checksumPolicy/>\n            </snapshots>\n            \x3c!--远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库--\x3e\n            <id>banseon-repository-proxy</id>\n            \x3c!--远程仓库名称--\x3e\n            <name>banseon-repository-proxy</name>\n            \x3c!--远程仓库URL，按protocol://hostname/path形式--\x3e\n            <url>http://192.168.1.169:9999/repository/</url>\n            \x3c!--用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。--\x3e\n            <layout>default</layout>\n        </repository>\n    </repositories>\n    \x3c!--发现插件的远程仓库列表，这些插件用于构建和报表--\x3e\n    <pluginRepositories>\n        \x3c!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--\x3e\n        <pluginRepository>\n            ......\n        </pluginRepository>\n    </pluginRepositories>\n\n    \x3c!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--\x3e\n    <dependencies>\n        <dependency>\n            \x3c!--依赖的group ID--\x3e\n            <groupId>org.apache.maven</groupId>\n            \x3c!--依赖的artifact ID--\x3e\n            <artifactId>maven-artifact</artifactId>\n            \x3c!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。--\x3e\n            <version>3.8.1</version>\n            \x3c!--依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应，尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。如果设置extensions为 true，就可以在plugin里定义新的类型。所以前面的类型的例子不完整。--\x3e\n            <type>jar</type>\n            \x3c!--依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，如果你想要构建两个单独的构件成JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生成两个单独的JAR构件。--\x3e\n            <classifier></classifier>\n            \x3c!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。\n                - compile ：默认范围，用于编译\n                - provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath\n                - runtime: 在执行时需要使用\n                - test:    用于test任务时使用\n                - system: 需要外在提供相应的元素。通过systemPath来取得\n                - systemPath: 仅用于范围为system。提供相应的路径\n                - optional:   当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用--\x3e\n            <scope>test</scope>\n            \x3c!--仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。--\x3e\n            <systemPath></systemPath>\n            \x3c!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题--\x3e\n            <exclusions>\n                <exclusion>\n                    <artifactId>spring-core</artifactId>\n                    <groupId>org.springframework</groupId>\n                </exclusion>\n            </exclusions>\n            \x3c!--可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。可选依赖阻断依赖的传递性。--\x3e\n            <optional>true</optional>\n        </dependency>\n    </dependencies>\n    \x3c!--不赞成使用. 现在Maven忽略该元素.--\x3e\n    <reports></reports>\n    \x3c!--该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。--\x3e\n    <reporting>\n        \x3c!--true，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。--\x3e\n        <excludeDefaults/>\n        \x3c!--所有产生的报表存放到哪里。默认值是${project.build.directory}/site。--\x3e\n        <outputDirectory/>\n        \x3c!--使用的报表插件和他们的配置。--\x3e\n        <plugins>\n            \x3c!--plugin元素包含描述报表插件需要的信息--\x3e\n            <plugin>\n                \x3c!--报表插件在仓库里的group ID--\x3e\n                <groupId/>\n                \x3c!--报表插件在仓库里的artifact ID--\x3e\n                <artifactId/>\n                \x3c!--被使用的报表插件的版本（或版本范围）--\x3e\n                <version/>\n                \x3c!--任何配置是否被传播到子项目--\x3e\n                <inherited/>\n                \x3c!--报表插件的配置--\x3e\n                <configuration/>\n                \x3c!--一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报表集，对应另一个执行目标--\x3e\n                <reportSets>\n                    \x3c!--表示报表的一个集合，以及产生该集合的配置--\x3e\n                    <reportSet>\n                        \x3c!--报表集合的唯一标识符，POM继承时用到--\x3e\n                        <id/>\n                        \x3c!--产生报表集合时，被使用的报表的配置--\x3e\n                        <configuration/>\n                        \x3c!--配置是否被继承到子POMs--\x3e\n                        <inherited/>\n                        \x3c!--这个集合里使用到哪些报表--\x3e\n                        <reports/>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n        </plugins>\n    </reporting>\n    \x3c!--继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖（必须描述group ID和artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过group ID和artifact ID匹配到这里的依赖，并使用这里的依赖信息。--\x3e\n    <dependencyManagement>\n        <dependencies>\n            \x3c!--参见dependencies/dependency元素--\x3e\n            <dependency>\n                ......\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n    \x3c!--项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。--\x3e\n    <distributionManagement>\n        \x3c!--部署项目产生的构件到远程仓库需要的信息--\x3e\n        <repository>\n            \x3c!--是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见repositories/repository元素--\x3e\n            <uniqueVersion/>\n            <id>banseon-maven2</id>\n            <name>banseon maven2</name>\n            <url>file://${basedir}/target/deploy</url>\n            <layout/>\n        </repository>\n        \x3c!--构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见distributionManagement/repository元素--\x3e\n        <snapshotRepository>\n            <uniqueVersion/>\n            <id>banseon-maven2</id>\n            <name>Banseon-maven2 Snapshot Repository</name>\n            <url>scp://svn.baidu.com/banseon:/usr/local/maven-snapshot</url>\n            <layout/>\n        </snapshotRepository>\n        \x3c!--部署项目的网站需要的信息--\x3e\n        <site>\n            \x3c!--部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置--\x3e\n            <id>banseon-site</id>\n            \x3c!--部署位置的名称--\x3e\n            <name>business api website</name>\n            \x3c!--部署位置的URL，按protocol://hostname/path形式--\x3e\n            <url>\n                scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web\n            </url>\n        </site>\n        \x3c!--项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位那些不在仓库里的构件（由于license限制）。--\x3e\n        <downloadUrl/>\n        \x3c!--如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。--\x3e\n        <relocation>\n            \x3c!--构件新的group ID--\x3e\n            <groupId/>\n            \x3c!--构件新的artifact ID--\x3e\n            <artifactId/>\n            \x3c!--构件新的版本号--\x3e\n            <version/>\n            \x3c!--显示给用户的，关于移动的额外信息，例如原因。--\x3e\n            <message/>\n        </relocation>\n        \x3c!--给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值有：none（默认），converted（仓库管理员从Maven 1 POM转换过来），partner（直接从伙伴Maven 2仓库同步过来），deployed（从Maven 2实例部署），verified（被核实时正确的和最终的）。--\x3e\n        <status/>\n    </distributionManagement>\n    \x3c!--以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里activation元素的说明）。格式是<name>value</name>。--\x3e\n    <properties/>\n</project>\n')])])]),t("h3",{attrs:{id:"pom-xml中的内置变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml中的内置变量"}},[e._v("#")]),e._v(" pom.xml中的内置变量")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('Maven内置变量说明：\n*   ${basedir} 项目根目录(即pom.xml文件所在目录)\n*   ${project.build.directory} 构建目录，缺省为target目录\n*   ${project.build.outputDirectory} 构建过程输出目录，缺省为target/classes\n*   ${project.build.finalName} 产出物名称，缺省为${project.artifactId}-${project.version}\n*   ${project.packaging} 打包类型，缺省为jar\n*   ${project.xxx} 当前pom文件的任意节点的内容\n*   ${env.xxx} 获取系统环境变量。例如,"env.PATH"指代了$path环境变量（在Windows上是%PATH%）。\n*   ${settings.xxx} 指代了settings.xml中对应元素的值。例如：<settings><offline>false</offline></settings>通过 ${settings.offline}获得offline的值。\n*   Java System Properties: 所有可通过java.lang.System.getProperties()访问的属性都能在POM中使用，例如 ${JAVA_HOME}。\n')])])]),t("h3",{attrs:{id:"相关元素介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关元素介绍"}},[e._v("#")]),e._v(" 相关元素介绍")]),e._v(" "),t("h4",{attrs:{id:"optional-元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#optional-元素"}},[e._v("#")]),e._v(" optional 元素")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("optional是Maven依赖jar时的一个选项，表示该依赖是可选的，项目之间依赖不传递。\n不设置 optional（默认为false）或者设置 optional 为 false，表示传递依赖。\n\n#1.假设有两个项目A和B，其中A为父项目，B为子项目。在父项目中引入了单元测试的依赖：\n[\n<dependency>\n    <groupId>junit</groupId>\n    <artifactId>junit</artifactId>\n    <version>4.12</version>\n    <optional>false</optional>\n</dependency>\n]\n\n>> 当optional元素默认值（false）时:\n由于optional为false, 那么具有依赖传递性。\n此时，子项目B中会直接引入父项目A中引入的Junit的jar包。\n也就是说B项目打包时，jar/war包中会包含junit的jar包。\n\n>> 当optional元素为true 时:\n由于optional为true, 那么不具有依赖传递性。\n如果项目B不需要Junit的jar包，那么在其pom文件中不需进行任何处理便可以。\n如果B项目也需要对应的jar包依赖，可以有两种选择：\n第一、A项目中对应依赖的optional设置为false或去掉；\n第二、B项目中直接引入需要的该依赖。\n\n#2.parent继承的情况\n我们经常会在parent项目中配置统一的依赖版本控制\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.12</version>\n            <optional>true</optional>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n此时，如果B项目需要Junit的jar包，可以直接在项目中引入，这里父项目中的optional配置对子项目并无影响。\n\n#3.结论\n在Maven项目中，恰当的使用optional配置，可以在很大程度上减少jar包的大小，提升编译和发布速度。\n")])])]),t("h4",{attrs:{id:"scope元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scope元素"}},[e._v("#")]),e._v(" scope元素")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("scope元素主要用来控制依赖的使用范围，指定当前包的依赖范围和依赖的传递性，也就是哪些依赖在哪些classpath中可用。\n常见的可选值有：compile, provided, runtime, test, system等。\n\n#1.compile（编译, 默认值）\ncompile表示对应依赖会参与当前项目的编译、测试、运行等，是一个比较强的依赖。\n打包时通常会包含该依赖，部署时会打包到lib目录下。\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n</dependency>\n\n#2.test（测试）\nscope为test表示依赖项目仅参与测试环节，在编译、运行、打包时不会使用。\n<dependency>\n    <groupId>junit</groupId>\n    <artifactId>junit</artifactId>\n    <version>4.12</version>\n    <scope>test</scope>\n</dependency>\n\n#3.runntime（运行时）\nrunntime仅仅适用于运行和测试环节，在编译环境下不会被使用。\n比如编译时只需要JDBC API的jar，而只有运行时才需要JDBC驱动实现。\n<dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n    <version>8.0.20</version>\n    <scope>runtime</scope>\n</dependency>\n\n#4.provided（已提供）\nprovided适合在编译和测试的环境，和compile功能相似，\n但provide仅在编译和测试阶段生效，provide不会被打包，也不具有传递性。\n比如：servlet-api, Tomcat容器已经提供，不需要重复引入。\n<dependency>\n    <groupId>javax.servlet</groupId>\n    <artifactId>javax.servlet-api</artifactId>\n    <scope>provided</scope>\n</dependency>\n\n#5.system (不推荐使用)\nsystem范围依赖与provided类似，不过依赖项不会从maven仓库获取，而需要从本地文件系统提供。\n使用时，一定要配合systemPath属性。不推荐使用，尽量从Maven库中引用依赖。\n<dependency>\n  <groupId>sun.jdk</groupId>\n  <artifactId>tools</artifactId>\n  <version>1.5.0</version>\n  <scope>system</scope>\n  <systemPath>${java.home}/../lib/tools.jar</systemPath>\n</dependency>\n")])])]),t("h5",{attrs:{id:"scope-依赖的传递性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scope-依赖的传递性"}},[e._v("#")]),e._v(" scope 依赖的传递性")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("如下图: B 依赖 A，C 依赖 B\n传递性的关键是 B 依赖 A 时所设置的 scope 值，当 B 采用不同的值时对应的依赖关系如下：\n>> 当 B 通过 test 或 provided 依赖 A 时，C 不依赖 A；\n>> 当 B 通过 runtime 或 compile 依赖 A 时，C 依赖 A；\n")])])]),t("h2",{attrs:{id:"脚手架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#脚手架"}},[e._v("#")]),e._v(" 脚手架")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://blog.csdn.net/z69183787/article/details/104754411",target:"_blank",rel:"noopener noreferrer"}},[e._v("Maven脚手架最佳实践"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/btt2013/article/details/125173893",target:"_blank",rel:"noopener noreferrer"}},[e._v("Maven之自定义archetype生成项目骨架(构建脚手架项目)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://juejin.cn/post/7052965570660007967",target:"_blank",rel:"noopener noreferrer"}},[e._v("Maven Archetype 多 Module 自定义代码脚手架"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/typedefJava/article/details/122453417",target:"_blank",rel:"noopener noreferrer"}},[e._v("手把手教你创建项目maven脚手架，maven archetype"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"创建archetype"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建archetype"}},[e._v("#")]),e._v(" 创建Archetype")]),e._v(" "),t("h4",{attrs:{id:"创建archetype-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建archetype-2"}},[e._v("#")]),e._v(" 创建Archetype")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi>mvn archetype:create-from-project\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] ruoyi                                                              [pom]\n[INFO] ruoyi-common                                                       [jar]\n[INFO] ruoyi-system                                                       [jar]\n[INFO] ruoyi-framework                                                    [jar]\n[INFO] ruoyi-quartz                                                       [jar]\n[INFO] ruoyi-generator                                                    [jar]\n[INFO] ruoyi-admin                                                        [jar]\n[INFO]\n[INFO] --------------------------< com.ruoyi:ruoyi >---------------------------\n[INFO] Building ruoyi 4.7.4                                               [1/7]\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] >>> maven-archetype-plugin:3.2.1:create-from-project (default-cli) > generate-sources @ ruoyi >>>\n[INFO]\n[INFO] <<< maven-archetype-plugin:3.2.1:create-from-project (default-cli) < generate-sources @ ruoyi <<<\n[INFO]\n[INFO]\n[INFO] --- maven-archetype-plugin:3.2.1:create-from-project (default-cli) @ ruoyi ---\n[INFO] Setting default groupId: com.ruoyi\n[INFO] Setting default artifactId: ruoyi\n[INFO] Setting default version: 4.7.4\n[INFO] Setting default package: com.ruoyi\n[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------< com.ruoyi:ruoyi-archetype >----------------------\n[INFO] Building ruoyi-archetype 4.7.4\n[INFO] --------------------------[ maven-archetype ]---------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ ruoyi-archetype ---\n[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Using 'null' encoding to copy filtered properties files.\n[INFO] Copying 678 resources\n[INFO]\n[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ ruoyi-archetype ---\n[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Using 'null' encoding to copy filtered properties files.\n[INFO] Copying 2 resources\n[INFO]\n[INFO] --- maven-archetype-plugin:3.2.1:jar (default-jar) @ ruoyi-archetype ---\n[INFO] Building archetype jar: E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\ruoyi-archetype-4.7.4.jar\n[INFO] Building jar: E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\ruoyi-archetype-4.7.4.jar\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  5.841 s\n[INFO] Finished at: 2022-06-18T22:34:25+08:00\n[INFO] ------------------------------------------------------------------------\n[INFO] Archetype project created in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for ruoyi 4.7.4:\n[INFO]\n[INFO] ruoyi .............................................. SUCCESS [ 13.078 s]\n[INFO] ruoyi-common ....................................... SKIPPED\n[INFO] ruoyi-system ....................................... SKIPPED\n[INFO] ruoyi-framework .................................... SKIPPED\n[INFO] ruoyi-quartz ....................................... SKIPPED\n[INFO] ruoyi-generator .................................... SKIPPED\n[INFO] ruoyi-admin ........................................ SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  13.731 s\n[INFO] Finished at: 2022-06-18T22:34:25+08:00\n[INFO] ------------------------------------------------------------------------\n\n")])])]),t("ul",[t("li",[e._v("这里最核心的部分就在于怎么修改"),t("code",[e._v("target/generated-sources/archetype/src/main/resources/archetype-resources")]),e._v("下的文件。")]),e._v(" "),t("li",[e._v("如果不修改直接继续的话，最终生成的项目会发现module的名称不会变，包名也不会变，代码里引用的会有一堆报错。")])]),e._v(" "),t("h5",{attrs:{id:"完善补充"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完善补充"}},[e._v("#")]),e._v(" 完善补充")]),e._v(" "),t("ol",[t("li",[e._v("在项目根目录下添加 archetype.properties，参考maven官方文档，以下配置仅供参考")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# 指定哪些文件或目录不打包到 archetype\nexcludePatterns=archetype.properties,*.iml,.idea/,.idea/libraries,logs/,bin/,doc/,sql/,ry.bat,ry.sh\n\n# 设置变量（由于.gitignore不能直接打包到archetype，并且不能通过archetype生成到新的项目）\ngitignore=.gitignore\n\n# 自定义 archetype 相关配置（不设置则会使用默认的，也就是当前项目配置为基础 + archetype）\narchetype.groupId=com.ruoyi\narchetype.artifactId=ruoyi-archetype\n# 不指定版本则跟随当前项目\n#archetype.version=4.7.4\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("复制项目.gitignore文件，并重命名为 "),t("strong",[e._v("gitignore")])]),e._v(" "),t("li",[e._v("检查项目各项配置，确认无误之后，在项目根目录下执行命令")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi>mvn archetype:create-from-project -Darchetype.properties=archetype.properties\n")])])]),t("h4",{attrs:{id:"修改父pom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改父pom"}},[e._v("#")]),e._v(" 修改父pom")]),e._v(" "),t("ol",[t("li",[e._v("找到根目录的pom文件"),t("code",[e._v("target/generated-sources/archetype/src/main/resources/archetype-resources/pom.xml")]),e._v("，会发现缺少module信息，这个必须加上。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    <modules>\n        <module>${rootArtifactId}-admin</module>\n        <module>${rootArtifactId}-framework</module>\n        <module>${rootArtifactId}-system</module>\n        <module>${rootArtifactId}-quartz</module>\n        <module>${rootArtifactId}-generator</module>\n        <module>${rootArtifactId}-common</module>\n    </modules>\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("父pom依赖引用的每个module也要修改，groupId 和 artifactId 按照以下的方式来改，不要写死！！")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    \x3c!-- 依赖声明 --\x3e\n    <dependencyManagement>\n        <dependencies>\n            ... ...\n            \x3c!-- 定时任务--\x3e\n            <dependency>\n                <groupId>${groupId}</groupId>\n                <artifactId>${rootArtifactId}-quartz</artifactId>\n                <version>${version}</version>\n            </dependency>\n\n            \x3c!-- 代码生成--\x3e\n            <dependency>\n                <groupId>${groupId}</groupId>\n                <artifactId>${rootArtifactId}-generator</artifactId>\n                <version>${version}</version>\n            </dependency>\n\n            \x3c!-- 核心模块--\x3e\n            <dependency>\n                <groupId>${groupId}</groupId>\n                <artifactId>${rootArtifactId}-framework</artifactId>\n                <version>${version}</version>\n            </dependency>\n\n            \x3c!-- 系统模块--\x3e\n            <dependency>\n                <groupId>${groupId}</groupId>\n                <artifactId>${rootArtifactId}-system</artifactId>\n                <version>${version}</version>\n            </dependency>\n\n            \x3c!-- 通用工具--\x3e\n            <dependency>\n                <groupId>${groupId}</groupId>\n                <artifactId>${rootArtifactId}-common</artifactId>\n                <version>${version}</version>\n            </dependency>\n\n        </dependencies>\n    </dependencyManagement>\n\n")])])]),t("h4",{attrs:{id:"修改module"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改module"}},[e._v("#")]),e._v(" 修改module")]),e._v(" "),t("ul",[t("li",[e._v("这个就是图中的问题，默认生成的module可能就是模板项目的名字，需要修改成类似__rootArtifactId__-client这种形式，注意是双下划线。")]),e._v(" "),t("li",[e._v("然后module中的互相引用 groupId 和 artifactId 按照父 pom 的方式对应修改。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    <dependencies>\n\n        \x3c!-- 核心模块--\x3e\n        <dependency>\n            <groupId>${groupId}</groupId>\n            <artifactId>${rootArtifactId}-framework</artifactId>\n        </dependency>\n\n        \x3c!-- 定时任务--\x3e\n        <dependency>\n            <groupId>${groupId}</groupId>\n            <artifactId>${rootArtifactId}-quartz</artifactId>\n        </dependency>\n\n        \x3c!-- 代码生成--\x3e\n        <dependency>\n            <groupId>${groupId}</groupId>\n            <artifactId>${rootArtifactId}-generator</artifactId>\n        </dependency>\n\n    </dependencies>\n")])])]),t("h4",{attrs:{id:"补充修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补充修改"}},[e._v("#")]),e._v(" 补充修改")]),e._v(" "),t("ol",[t("li",[e._v("target/generated-sources/archetype/src/main/resources/archetype-resources/"),t("strong",[e._v("rootArtifactId")]),e._v("-admin/src/main/resources/application.yml")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server:\n  # 服务器的HTTP端口，默认为80\n  port: ${serverPort}\n\n# MyBatis\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: ${groupId}.**.domain\n")])])]),t("h4",{attrs:{id:"archetype-metadata-修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#archetype-metadata-修改"}},[e._v("#")]),e._v(" archetype-metadata 修改")]),e._v(" "),t("ol",{attrs:{start:"0"}},[t("li",[e._v("补充修改"),t("code",[e._v("target/generated-sources/archetype/src/test/resources/projects/basic/archetype.properties")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("div",{staticClass:"highlight-lines"},[t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("br")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("#Mon Jun 20 14:29:34 CST 2022\npackage=it.pkg\nversion=0.1-SNAPSHOT\ngroupId=archetype.it\ngitignore=.gitignore\nartifactId=basic\nserverPort=8080\n")])])]),t("ol",[t("li",[e._v("找到"),t("code",[e._v("target/generated-sources/archetype/src/main/resources/META-INF/maven/archetype-metadata.xml")]),e._v("文件，确保modules相关的部分，重点注意看 id 、dir、name 的书写方式。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("div",{staticClass:"highlight-lines"},[t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<archetype-descriptor xsi:schemaLocation="https://maven.apache.org/plugins/maven-archetype-plugin/archetype-descriptor/1.1.0 http://maven.apache.org/xsd/archetype-descriptor-1.1.0.xsd" name="ruoyi"\n    xmlns="https://maven.apache.org/plugins/maven-archetype-plugin/archetype-descriptor/1.1.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <requiredProperties>\n    <requiredProperty key="gitignore">\n      <defaultValue>.gitignore</defaultValue>\n    </requiredProperty>\n    <requiredProperty key="serverPort">\n      \x3c!-- 也可以加上defaultValue，则变成非必填 --\x3e\n      \x3c!--      <defaultValue>8080</defaultValue>--\x3e\n    </requiredProperty>\n  </requiredProperties>\n  <fileSets>\n    <fileSet filtered="true" encoding="UTF-8">\n      <directory>sql</directory>\n      <includes>\n        <include>**/*.html</include>\n      </includes>\n    </fileSet>\n    <fileSet encoding="UTF-8">\n      <directory>bin</directory>\n      <includes>\n        <include>**/*.bat</include>\n      </includes>\n    </fileSet>\n    <fileSet encoding="UTF-8">\n      <directory>doc</directory>\n      <includes>\n        <include>**/*.docx</include>\n      </includes>\n    </fileSet>\n    <fileSet encoding="UTF-8">\n      <directory>.github</directory>\n      <includes>\n        <include>**/*.yml</include>\n      </includes>\n    </fileSet>\n    <fileSet encoding="UTF-8">\n      <directory>sql</directory>\n      <includes>\n        <include>**/*.pdm</include>\n        <include>**/*.sql</include>\n      </includes>\n    </fileSet>\n    <fileSet encoding="UTF-8">\n      <directory></directory>\n      <includes>\n        <include>.gitignore</include>\n        <include>LICENSE</include>\n        <include>README.md</include>\n        <include>ry.bat</include>\n        <include>ry.sh</include>\n        <include>__gitignore__</include>\n      </includes>\n    </fileSet>\n  </fileSets>\n  <modules>\n    <module id="${rootArtifactId}-admin" dir="__rootArtifactId__-admin" name="${rootArtifactId}-admin">\n      <fileSets>\n        <fileSet filtered="true" packaged="true" encoding="UTF-8">\n          <directory>src/main/java</directory>\n          <includes>\n            <include>**/*.java</include>\n          </includes>\n        </fileSet>\n\n        <fileSet encoding="UTF-8" filtered="true">\n          <directory>src/main/resources</directory>\n          <includes>\n            <include>**/*.yml</include>\n          </includes>\n        </fileSet>\n        <fileSet filtered="true" encoding="UTF-8">\n          <directory>src/main/resources</directory>\n          <includes>\n            <include>**/*.txt</include>\n            <include>**/*.xml</include>\n            <include>**/*.html</include>\n            <include>**/*.properties</include>\n          </includes>\n        </fileSet>\n        <fileSet encoding="UTF-8">\n          <directory>src/main/resources</directory>\n          <includes>\n            <include>**/*.otf</include>\n            <include>**/*.jpg</include>\n            <include>**/*.css</include>\n            <include>**/*.gif</include>\n            <include>**/*.svg</include>\n            <include>**/*.ttf</include>\n            <include>**/*.png</include>\n            <include>**/*.js</include>\n            <include>**/*.eot</include>\n            <include>**/*.woff</include>\n            <include>**/*.ico</include>\n            <include>**/*.yml</include>\n            <include>**/*.woff2</include>\n          </includes>\n        </fileSet>\n      </fileSets>\n    </module>\n    <module id="${rootArtifactId}-framework" dir="__rootArtifactId__-framework" name="${rootArtifactId}-framework">\n      <fileSets>\n        <fileSet filtered="true" packaged="true" encoding="UTF-8">\n          <directory>src/main/java</directory>\n          <includes>\n            <include>**/*.java</include>\n          </includes>\n        </fileSet>\n      </fileSets>\n    </module>\n    <module id="${rootArtifactId}-system" dir="__rootArtifactId__-system" name="${rootArtifactId}-system">\n      <fileSets>\n        <fileSet filtered="true" packaged="true" encoding="UTF-8">\n          <directory>src/main/java</directory>\n          <includes>\n            <include>**/*.java</include>\n          </includes>\n        </fileSet>\n        <fileSet filtered="true" encoding="UTF-8">\n          <directory>src/main/resources</directory>\n          <includes>\n            <include>**/*.xml</include>\n          </includes>\n        </fileSet>\n      </fileSets>\n    </module>\n    <module id="${rootArtifactId}-quartz" dir="__rootArtifactId__-quartz" name="${rootArtifactId}-quartz">\n      <fileSets>\n        <fileSet filtered="true" packaged="true" encoding="UTF-8">\n          <directory>src/main/java</directory>\n          <includes>\n            <include>**/*.java</include>\n          </includes>\n        </fileSet>\n        <fileSet filtered="true" encoding="UTF-8">\n          <directory>src/main/resources</directory>\n          <includes>\n            <include>**/*.xml</include>\n            <include>**/*.html</include>\n          </includes>\n        </fileSet>\n      </fileSets>\n    </module>\n    <module id="${rootArtifactId}-generator" dir="__rootArtifactId__-generator" name="${rootArtifactId}-generator">\n      <fileSets>\n        <fileSet filtered="true" packaged="true" encoding="UTF-8">\n          <directory>src/main/java</directory>\n          <includes>\n            <include>**/*.java</include>\n          </includes>\n        </fileSet>\n        <fileSet filtered="true" encoding="UTF-8">\n          <directory>src/main/resources</directory>\n          <includes>\n            <include>**/*.xml</include>\n            <include>**/*.vm</include>\n            <include>**/*.html</include>\n          </includes>\n        </fileSet>\n        <fileSet encoding="UTF-8">\n          <directory>src/main/resources</directory>\n          <includes>\n            <include>**/*.yml</include>\n          </includes>\n        </fileSet>\n      </fileSets>\n    </module>\n    <module id="${rootArtifactId}-common" dir="__rootArtifactId__-common" name="${rootArtifactId}-common">\n      <fileSets>\n        <fileSet filtered="true" packaged="true" encoding="UTF-8">\n          <directory>src/main/java</directory>\n          <includes>\n            <include>**/*.java</include>\n          </includes>\n        </fileSet>\n      </fileSets>\n    </module>\n  </modules>\n</archetype-descriptor>\n')])])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("进入 target/generated-sources/archetype目录，执行命令")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("div",{staticClass:"highlight-lines"},[t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype>mvn clean\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------< com.ruoyi:ruoyi-archetype >----------------------\n[INFO] Building ruoyi-archetype 4.7.4\n[INFO] --------------------------[ maven-archetype ]---------------------------\n[INFO]\n[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ ruoyi-archetype ---\n[INFO] Deleting E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.229 s\n[INFO] Finished at: 2022-06-18T23:11:08+08:00\n[INFO] ------------------------------------------------------------------------\n\nE:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype>mvn install\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------< com.ruoyi:ruoyi-archetype >----------------------\n[INFO] Building ruoyi-archetype 4.7.4\n[INFO] --------------------------[ maven-archetype ]---------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ ruoyi-archetype ---\n[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Using 'null' encoding to copy filtered properties files.\n[INFO] Copying 678 resources\n[INFO]\n[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ ruoyi-archetype ---\n[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Using 'null' encoding to copy filtered properties files.\n[INFO] Copying 2 resources\n[INFO]\n[INFO] --- maven-archetype-plugin:3.2.1:jar (default-jar) @ ruoyi-archetype ---\n[INFO] Building archetype jar: E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\ruoyi-archetype-4.7.4.jar\n[INFO] Building jar: E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\ruoyi-archetype-4.7.4.jar\n[INFO]\n[INFO] --- maven-archetype-plugin:3.2.1:integration-test (default-integration-test) @ ruoyi-archetype ---\n[INFO] Processing Archetype IT project: basic\n[INFO] ----------------------------------------------------------------------------\n[INFO] Using following parameters for creating project from Archetype: ruoyi-archetype:4.7.4\n[INFO] ----------------------------------------------------------------------------\n[INFO] Parameter: groupId, Value: archetype.it\n[INFO] Parameter: artifactId, Value: basic\n[INFO] Parameter: version, Value: 0.1-SNAPSHOT\n[INFO] Parameter: package, Value: it.pkg\n[INFO] Parameter: packageInPathFormat, Value: it/pkg\n[INFO] Parameter: version, Value: 0.1-SNAPSHOT\n[INFO] Parameter: package, Value: it.pkg\n[INFO] Parameter: groupId, Value: archetype.it\n[INFO] Parameter: artifactId, Value: basic\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-admin\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-framework\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-system\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-quartz\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-generator\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-common\\pom.xml\n[INFO] Project created from Archetype in dir: E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projec\nts\\basic\\project\\basic\n[INFO]\n[INFO] --- maven-install-plugin:3.0.0-M1:install (default-install) @ ruoyi-archetype ---\n[INFO] Installing E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\ruoyi-archetype-4.7.4.jar to E:\\iEnviroment\\development\\apache-maven-3.8.2\\repository\\com\\ruoyi\\ruoyi-archetype\\4.7.4\\ruoyi-archetype-4.7.4.jar\n[INFO] Installing E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\pom.xml to E:\\iEnviroment\\development\\apache-maven-3.8.2\\repository\\com\\ruoyi\\ruoyi-archetype\\4.7.4\\ruoyi-archetype-4.7.4.pom\n[INFO]\n[INFO] --- maven-archetype-plugin:3.2.1:update-local-catalog (default-update-local-catalog) @ ruoyi-archetype ---\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  6.963 s\n[INFO] Finished at: 2022-06-18T23:13:57+08:00\n[INFO] ------------------------------------------------------------------------\n")])])]),t("ul",[t("li",[e._v("E:\\iEnviroment\\development\\apache-maven-3.8.2\\repository\\archetype-catalog.xml")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<archetype-catalog xsi:schemaLocation="http://maven.apache.org/plugins/maven-archetype-plugin/archetype-catalog/1.0.0 http://maven.apache.org/xsd/archetype-catalog-1.0.0.xsd"\n    xmlns="http://maven.apache.org/plugins/maven-archetype-plugin/archetype-catalog/1.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <archetypes>\n    <archetype>\n      <groupId>com.ruoyi</groupId>\n      <artifactId>ruoyi-archetype</artifactId>\n      <version>4.7.4</version>\n      <description>若依管理系统</description>\n    </archetype>\n  </archetypes>\n</archetype-catalog>\n')])])]),t("ol",{attrs:{start:"3"}},[t("li",[e._v("执行下mvn deploy上传到nexus\n"),t("ul",[t("li",[e._v("target/generated-sources/archetype/pom.xml")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\x3c!--指定仓库地址--\x3e\n<distributionManagement>\n    <repository>\n    \x3c!--此名称要和settings.xml中设置的ID一致--\x3e\n    <id>test</id>\n    <url>http://192.168.56.106:8081/repository/test-release/</url>\n    </repository>\n</distributionManagement>\n")])])])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype>mvn deploy\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ---------------------< com.ruoyi:ruoyi-archetype >----------------------\n[INFO] Building ruoyi-archetype 4.7.4\n[INFO] --------------------------[ maven-archetype ]---------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ ruoyi-archetype ---\n[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Using 'null' encoding to copy filtered properties files.\n[INFO] Copying 678 resources\n[INFO]\n[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ ruoyi-archetype ---\n[WARNING] Using platform encoding (GBK actually) to copy filtered resources, i.e. build is platform dependent!\n[INFO] Using 'null' encoding to copy filtered properties files.\n[INFO] Copying 2 resources\n[INFO]\n[INFO] --- maven-archetype-plugin:3.2.1:jar (default-jar) @ ruoyi-archetype ---\n[INFO] Building archetype jar: E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\ruoyi-archetype-4.7.4.jar\n[INFO] Building jar: E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\ruoyi-archetype-4.7.4.jar\n[INFO]\n[INFO] --- maven-archetype-plugin:3.2.1:integration-test (default-integration-test) @ ruoyi-archetype ---\n[INFO] Processing Archetype IT project: basic\n[INFO] ----------------------------------------------------------------------------\n[INFO] Using following parameters for creating project from Archetype: ruoyi-archetype:4.7.4\n[INFO] ----------------------------------------------------------------------------\n[INFO] Parameter: groupId, Value: archetype.it\n[INFO] Parameter: artifactId, Value: basic\n[INFO] Parameter: version, Value: 0.1-SNAPSHOT\n[INFO] Parameter: package, Value: it.pkg\n[INFO] Parameter: packageInPathFormat, Value: it/pkg\n[INFO] Parameter: version, Value: 0.1-SNAPSHOT\n[INFO] Parameter: package, Value: it.pkg\n[INFO] Parameter: groupId, Value: archetype.it\n[INFO] Parameter: artifactId, Value: basic\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-admin\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-framework\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-system\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-quartz\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-generator\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projects\\ba\nsic\\project\\basic\\basic-common\\pom.xml\n[INFO] Project created from Archetype in dir: E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\test-classes\\projec\nts\\basic\\project\\basic\n[INFO]\n[INFO] --- maven-install-plugin:3.0.0-M1:install (default-install) @ ruoyi-archetype ---\n[INFO] Installing E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\target\\ruoyi-archetype-4.7.4.jar to E:\\iEnviroment\\dev\nelopment\\apache-maven-3.8.2\\repository\\com\\ruoyi\\ruoyi-archetype\\4.7.4\\ruoyi-archetype-4.7.4.jar\n[INFO] Installing E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi\\target\\generated-sources\\archetype\\pom.xml to E:\\iEnviroment\\development\\apache-maven-3.8\n.2\\repository\\com\\ruoyi\\ruoyi-archetype\\4.7.4\\ruoyi-archetype-4.7.4.pom\n[INFO]\n[INFO] --- maven-archetype-plugin:3.2.1:update-local-catalog (default-update-local-catalog) @ ruoyi-archetype ---\n[INFO]\n[INFO] --- maven-deploy-plugin:3.0.0-M2:deploy (default-deploy) @ ruoyi-archetype ---\nUploading to test: http://192.168.56.106:8081/repository/test-release/com/ruoyi/ruoyi-archetype/4.7.4/ruoyi-archetype-4.7.4.jar\nUploaded to test: http://192.168.56.106:8081/repository/test-release/com/ruoyi/ruoyi-archetype/4.7.4/ruoyi-archetype-4.7.4.jar (4.1 MB at 1.6 MB/s)\nUploading to test: http://192.168.56.106:8081/repository/test-release/com/ruoyi/ruoyi-archetype/4.7.4/ruoyi-archetype-4.7.4.pom\nUploaded to test: http://192.168.56.106:8081/repository/test-release/com/ruoyi/ruoyi-archetype/4.7.4/ruoyi-archetype-4.7.4.pom (1.3 kB at 2.9 kB/s)\nDownloading from test: http://192.168.56.106:8081/repository/test-release/com/ruoyi/ruoyi-archetype/maven-metadata.xml\nUploading to test: http://192.168.56.106:8081/repository/test-release/com/ruoyi/ruoyi-archetype/maven-metadata.xml\nUploaded to test: http://192.168.56.106:8081/repository/test-release/com/ruoyi/ruoyi-archetype/maven-metadata.xml (304 B at 819 B/s)\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  11.669 s\n[INFO] Finished at: 2022-06-19T00:20:32+08:00\n[INFO] ------------------------------------------------------------------------\n")])])]),t("h3",{attrs:{id:"使用archetype"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用archetype"}},[e._v("#")]),e._v(" 使用Archetype")]),e._v(" "),t("h4",{attrs:{id:"命令行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令行"}},[e._v("#")]),e._v(" 命令行")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("div",{staticClass:"highlight-lines"},[t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\archetype>mvn archetype:generate -DarchetypeCatalog=local\n[INFO] Scanning for projects...\nDownloading from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-antrun-plugin/1.3/maven-antrun-plugin-1.3.pom\nDownloaded from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-antrun-plugin/1.3/maven-antrun-plugin-1.3.pom (0 B at 0 B/s)\nDownloading from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-plugins/12/maven-plugins-12.pom\nDownloaded from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-plugins/12/maven-plugins-12.pom (0 B at 0 B/s)\nDownloading from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-antrun-plugin/1.3/maven-antrun-plugin-1.3.jar\nDownloaded from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-antrun-plugin/1.3/maven-antrun-plugin-1.3.jar (0 B at 0 B/s)\nDownloading from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-assembly-plugin/2.2-beta-5/maven-assembly-plugin-2.2-beta-5.pom\nDownloaded from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-assembly-plugin/2.2-beta-5/maven-assembly-plugin-2.2-beta-5.pom (0 B at 0 B/s)\nDownloading from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-plugins/16/maven-plugins-16.pom\nDownloaded from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-plugins/16/maven-plugins-16.pom (0 B at 0 B/s)\nDownloading from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-assembly-plugin/2.2-beta-5/maven-assembly-plugin-2.2-beta-5.jar\nDownloaded from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-assembly-plugin/2.2-beta-5/maven-assembly-plugin-2.2-beta-5.jar (0 B at 0 B/s)\nDownloading from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-release-plugin/2.5.3/maven-release-plugin-2.5.3.pom\nDownloaded from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-release-plugin/2.5.3/maven-release-plugin-2.5.3.pom (0 B at 0 B/s)\nDownloading from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/release/maven-release/2.5.3/maven-release-2.5.3.pom\nDownloaded from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/release/maven-release/2.5.3/maven-release-2.5.3.pom (0 B at 0 B/s)\nDownloading from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-release-plugin/2.5.3/maven-release-plugin-2.5.3.jar\nDownloaded from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-release-plugin/2.5.3/maven-release-plugin-2.5.3.jar (0 B at 0 B/s)\n[INFO]\n[INFO] ------------------< org.apache.maven:standalone-pom >-------------------\n[INFO] Building Maven Stub Project (No POM) 1\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] >>> maven-archetype-plugin:3.2.1:generate (default-cli) > generate-sources @ standalone-pom >>>\n[INFO]\n[INFO] <<< maven-archetype-plugin:3.2.1:generate (default-cli) < generate-sources @ standalone-pom <<<\n[INFO]\n[INFO]\n[INFO] --- maven-archetype-plugin:3.2.1:generate (default-cli) @ standalone-pom ---\n[INFO] Generating project in Interactive mode\n[INFO] No archetype defined. Using maven-archetype-quickstart (org.apache.maven.archetypes:maven-archetype-quickstart:1.0)\nChoose archetype:\n1: local -> com.ruoyi:ruoyi-archetype (若依管理系统)\nChoose a number or apply filter (format: [groupId:]artifactId, case sensitive contains): : 1\nDefine value for property 'groupId': com.tosin\nDefine value for property 'artifactId': tosin\nDefine value for property 'version' 1.0-SNAPSHOT: :\nDefine value for property 'package' com.tosin: :\nConfirm properties configuration:\ngroupId: com.tosin\nartifactId: tosin\nversion: 1.0-SNAPSHOT\npackage: com.tosin\n Y: :\n[INFO] ----------------------------------------------------------------------------\n[INFO] Using following parameters for creating project from Archetype: ruoyi-archetype:4.7.4\n[INFO] ----------------------------------------------------------------------------\n[INFO] Parameter: groupId, Value: com.tosin\n[INFO] Parameter: artifactId, Value: tosin\n[INFO] Parameter: version, Value: 1.0-SNAPSHOT\n[INFO] Parameter: package, Value: com.tosin\n[INFO] Parameter: packageInPathFormat, Value: com/tosin\n[INFO] Parameter: package, Value: com.tosin\n[INFO] Parameter: version, Value: 1.0-SNAPSHOT\n[INFO] Parameter: groupId, Value: com.tosin\n[INFO] Parameter: artifactId, Value: tosin\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\archetype\\tosin\\tosin-admin\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\archetype\\tosin\\tosin-framework\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\archetype\\tosin\\tosin-system\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\archetype\\tosin\\tosin-quartz\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\archetype\\tosin\\tosin-generator\\pom.xml\n[INFO] Parent element not overwritten in E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\archetype\\tosin\\tosin-common\\pom.xml\n[INFO] Project created from Archetype in dir: E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\archetype\\tosin\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  06:22 min\n[INFO] Finished at: 2022-06-18T23:30:54+08:00\n[INFO] ------------------------------------------------------------------------\n")])])]),t("h5",{attrs:{id:"完整形式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完整形式"}},[e._v("#")]),e._v(" 完整形式")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("mvn archetype:generate -DarchetypeCatalog=local -DgroupId=com.tosinjia -DartifactId=tosinjia -Dversion=0.0.1-SNAPSHOT -Dpackage=com.tosinjia -DserverPort=8000 -DarchetypeGroupId=com.ruoyi -DarchetypeArtifactId=ruoyi-archetype -DarchetypeVersion=4.7.4 -DinteractiveMode=false\n")])])]),t("h5",{attrs:{id:"参数介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数介绍"}},[e._v("#")]),e._v(" 参数介绍")]),e._v(" "),t("ul",[t("li",[e._v("groupId、artifactId、version、package(源码包名)、serverPort 需要生成的项目配置")]),e._v(" "),t("li",[e._v("archetypeGroupId、archetypeArtifactId、archetypeVersion 指定生成项目的原型")]),e._v(" "),t("li",[e._v("interactiveMode（交互模式） 为必填参数，默认为true。执行时需要进行二次确认，如果不想要二次确认，则可以设置为false")])]),e._v(" "),t("h4",{attrs:{id:"idea"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#idea"}},[e._v("#")]),e._v(" IDEA")]),e._v(" "),t("ol",[t("li",[e._v("新建项目，选择 Maven，勾选 Create from archetype，选择 Add Archetype...，添加后不显示\n"),t("img",{attrs:{src:r(519),alt:"maven_idea_addArchetype"}})]),e._v(" "),t("li",[e._v("C:\\Users\\User\\AppData\\Local\\JetBrains\\IntelliJIdea2021.2\\Maven\\Indices\\UserArchetypes.xml")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<archetypes>\n    <archetype groupId="com.ruoyi" artifactId="ruoyi-archetype" version="4.7.4" />\n</archetypes>\n')])])]),t("ol",{attrs:{start:"3"}},[t("li",[e._v("使用Archetype创建项目\n"),t("img",{attrs:{src:r(520),alt:"maven_idea_addArchetype_newProject_1"}}),e._v(" "),t("img",{attrs:{src:r(521),alt:"maven_idea_addArchetype_newProject_2"}}),e._v(" "),t("img",{attrs:{src:r(522),alt:"maven_idea_addArchetype_newProject_3"}})])]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://blog.csdn.net/gao_zhennan/article/details/123261538",target:"_blank",rel:"noopener noreferrer"}},[e._v("IDEA如何添加和删除自定义的Archetype原型"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/qq_52827181/article/details/121479427",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何在 IDEA 中添加 Maven 项目的 Archetype（解决添加不起作用的问题）"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"异常-invoker-process-ended-with-result-different-than-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异常-invoker-process-ended-with-result-different-than-0"}},[e._v("#")]),e._v(" 异常：Invoker process ended with result different than 0!")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('E:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi>mvn archetype:create-from-project\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] ruoyi                                                              [pom]\n[INFO] ruoyi-common                                                       [jar]\n[INFO] ruoyi-system                                                       [jar]\n[INFO] ruoyi-framework                                                    [jar]\n[INFO] ruoyi-quartz                                                       [jar]\n[INFO] ruoyi-generator                                                    [jar]\n[INFO] ruoyi-admin                                                        [jar]\n[INFO]\n[INFO] --------------------------< com.ruoyi:ruoyi >---------------------------\n[INFO] Building ruoyi 4.7.4                                               [1/7]\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] >>> maven-archetype-plugin:3.2.1:create-from-project (default-cli) > generate-sources @ ruoyi >>>\n[INFO]\n[INFO] <<< maven-archetype-plugin:3.2.1:create-from-project (default-cli) < generate-sources @ ruoyi <<<\n[INFO]\n[INFO]\n[INFO] --- maven-archetype-plugin:3.2.1:create-from-project (default-cli) @ ruoyi ---\n[INFO] Setting default groupId: com.ruoyi\n[INFO] Setting default artifactId: ruoyi\n[INFO] Setting default version: 4.7.4\n[INFO] Setting default package: com.ruoyi\n[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.\n[ERROR] Error executing Maven.\n[ERROR] The specified user settings file does not exist: C:\\Users\\User\\.m2\\settings.xml\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for ruoyi 4.7.4:\n[INFO]\n[INFO] ruoyi .............................................. FAILURE [  8.759 s]\n[INFO] ruoyi-common ....................................... SKIPPED\n[INFO] ruoyi-system ....................................... SKIPPED\n[INFO] ruoyi-framework .................................... SKIPPED\n[INFO] ruoyi-quartz ....................................... SKIPPED\n[INFO] ruoyi-generator .................................... SKIPPED\n[INFO] ruoyi-admin ........................................ SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  9.519 s\n[INFO] Finished at: 2022-06-18T22:22:06+08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-archetype-plugin:3.2.1:create-from-project (default-cli) on project ruoyi: Invoker process ended with result different tha\nn 0! -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n\n\nE:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi>mvn -e archetype:create-from-project\n[INFO] Error stacktraces are turned on.\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] ruoyi                                                              [pom]\n[INFO] ruoyi-common                                                       [jar]\n[INFO] ruoyi-system                                                       [jar]\n[INFO] ruoyi-framework                                                    [jar]\n[INFO] ruoyi-quartz                                                       [jar]\n[INFO] ruoyi-generator                                                    [jar]\n[INFO] ruoyi-admin                                                        [jar]\n[INFO]\n[INFO] --------------------------< com.ruoyi:ruoyi >---------------------------\n[INFO] Building ruoyi 4.7.4                                               [1/7]\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] >>> maven-archetype-plugin:3.2.1:create-from-project (default-cli) > generate-sources @ ruoyi >>>\n[INFO]\n[INFO] <<< maven-archetype-plugin:3.2.1:create-from-project (default-cli) < generate-sources @ ruoyi <<<\n[INFO]\n[INFO]\n[INFO] --- maven-archetype-plugin:3.2.1:create-from-project (default-cli) @ ruoyi ---\n[INFO] Setting default groupId: com.ruoyi\n[INFO] Setting default artifactId: ruoyi\n[INFO] Setting default version: 4.7.4\n[INFO] Setting default package: com.ruoyi\n[WARN] Maven will be executed in interactive mode, but no input stream has been configured for this MavenInvoker instance.\n[ERROR] Error executing Maven.\n[ERROR] The specified user settings file does not exist: C:\\Users\\User\\.m2\\settings.xml\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for ruoyi 4.7.4:\n[INFO]\n[INFO] ruoyi .............................................. FAILURE [  7.123 s]\n[INFO] ruoyi-common ....................................... SKIPPED\n[INFO] ruoyi-system ....................................... SKIPPED\n[INFO] ruoyi-framework .................................... SKIPPED\n[INFO] ruoyi-quartz ....................................... SKIPPED\n[INFO] ruoyi-generator .................................... SKIPPED\n[INFO] ruoyi-admin ........................................ SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  7.807 s\n[INFO] Finished at: 2022-06-18T22:25:17+08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-archetype-plugin:3.2.1:create-from-project (default-cli) on project ruoyi: Invoker process ended with result different tha\nn 0! -> [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-archetype-plugin:3.2.1:create-from-project (default-cli) on project ruoyi:\n Invoker process ended with result different than 0!\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:215)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:972)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:293)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:196)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:498)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\nCaused by: org.apache.maven.plugin.MojoFailureException: Invoker process ended with result different than 0!\n    at org.apache.maven.archetype.mojos.CreateArchetypeFromProjectMojo.execute (CreateArchetypeFromProjectMojo.java:267)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:972)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:293)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:196)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:498)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n[ERROR]\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n\n\nE:\\iEnviroment\\development\\projects\\ideaProjects\\Demo\\system-framework\\RuoYi>mvn -eX archetype:create-from-project\n[INFO] Error stacktraces are turned on.\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] ruoyi                                                              [pom]\n[INFO] ruoyi-common                                                       [jar]\n[INFO] ruoyi-system                                                       [jar]\n[INFO] ruoyi-framework                                                    [jar]\n[INFO] ruoyi-quartz                                                       [jar]\n[INFO] ruoyi-generator                                                    [jar]\n[INFO] ruoyi-admin                                                        [jar]\n[INFO]\n[INFO] --------------------------< com.ruoyi:ruoyi >---------------------------\n[INFO] Building ruoyi 4.7.4                                               [1/7]\n[INFO] --------------------------------[ pom ]---------------------------------\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Skipping ruoyi\n[INFO] This project has been banned from the build due to previous failures.\n[INFO] ------------------------------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for ruoyi 4.7.4:\n[INFO]\n[INFO] ruoyi .............................................. FAILURE [  0.004 s]\n[INFO] ruoyi-common ....................................... SKIPPED\n[INFO] ruoyi-system ....................................... SKIPPED\n[INFO] ruoyi-framework .................................... SKIPPED\n[INFO] ruoyi-quartz ....................................... SKIPPED\n[INFO] ruoyi-generator .................................... SKIPPED\n[INFO] ruoyi-admin ........................................ SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  0.673 s\n[INFO] Finished at: 2022-06-18T22:22:50+08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Unknown lifecycle phase "X". You must specify a valid lifecycle phase or a goal in the format <plugin-prefix>:<goal> or <plugin-group-id>:<plugin-artifact-id>[:<plugin-version>\n]:<goal>. Available lifecycle phases are: validate, initialize, generate-sources, process-sources, generate-resources, process-resources, compile, process-classes, generate-test-source\ns, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package, package, pre-integration-test, integration-test, po\nst-integration-test, verify, install, deploy, pre-clean, clean, post-clean, pre-site, site, post-site, site-deploy. -> [Help 1]\norg.apache.maven.lifecycle.LifecyclePhaseNotFoundException: Unknown lifecycle phase "X". You must specify a valid lifecycle phase or a goal in the format <plugin-prefix>:<goal> or <plu\ngin-group-id>:<plugin-artifact-id>[:<plugin-version>]:<goal>. Available lifecycle phases are: validate, initialize, generate-sources, process-sources, generate-resources, process-resou\nrces, compile, process-classes, generate-test-sources, process-test-sources, generate-test-resources, process-test-resources, test-compile, process-test-classes, test, prepare-package,\n package, pre-integration-test, integration-test, post-integration-test, verify, install, deploy, pre-clean, clean, post-clean, pre-site, site, post-site, site-deploy.\n    at org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator.calculateLifecycleMappings (DefaultLifecycleExecutionPlanCalculator.java:248)\n    at org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator.calculateMojoExecutions (DefaultLifecycleExecutionPlanCalculator.java:217)\n    at org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator.calculateExecutionPlan (DefaultLifecycleExecutionPlanCalculator.java:126)\n    at org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator.calculateExecutionPlan (DefaultLifecycleExecutionPlanCalculator.java:144)\n    at org.apache.maven.lifecycle.internal.builder.BuilderCommon.resolveBuildPlan (BuilderCommon.java:97)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:111)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:972)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:293)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:196)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:498)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n[ERROR]\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/LifecycleP haseNotFoundException\n\n')])])]),t("ul",[t("li",[t("p",[e._v("E:\\iEnviroment\\development\\apache-maven-3.8.2\\conf\\settings.xml 复制到 C:\\Users\\User.m2\\")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://blog.csdn.net/haiyoung/article/details/104389061",target:"_blank",rel:"noopener noreferrer"}},[e._v("mvn archetype:create-from-project报错，Invoker process ended with result different than 0!"),t("OutboundLink")],1)])])]),e._v(" "),t("h2",{attrs:{id:"私服"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#私服"}},[e._v("#")]),e._v(" 私服")]),e._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),t("h4",{attrs:{id:"docker安装maven私服"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker安装maven私服"}},[e._v("#")]),e._v(" Docker安装Maven私服")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://blog.csdn.net/u012943767/article/details/79475718",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用Docker搭建Maven私服"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"仓库的类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#仓库的类型"}},[e._v("#")]),e._v(" 仓库的类型")]),e._v(" "),t("ul",[t("li",[e._v("proxy 远程仓库的代理 比如说nexus配置了一个central repository的proxy,当用户向这个proxy请求一个artifact的时候，会现在本地查找，如果找不到，则会从远程仓库下载，然后返回给用户。")]),e._v(" "),t("li",[e._v("hosted 宿主仓库 用户可以把自己的一些仓库deploy到这个仓库中")]),e._v(" "),t("li",[e._v("group 仓库组 是nexus特有的概念，目的是将多个仓库整合，对用户暴露统一的地址，这样就不需要配置多个仓库地址。")])]),e._v(" "),t("h3",{attrs:{id:"使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[e._v("#")]),e._v(" 使用")]),e._v(" "),t("h4",{attrs:{id:"准备工作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[e._v("#")]),e._v(" 准备工作")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("创建仓库 点击Create repository,然后选择maven2(hosted)然后输入仓库名称（test-release）。在version policy中选择这个仓库的类型，这里选择release,在Deployment policy中选择Allow redeploy（这个很重要）.")])]),e._v(" "),t("li",[t("p",[e._v("创建用户 点击左侧菜单栏的Users菜单，然后点击Create local user.我这里创建了一个用户 tosinjia:tj123456")])])]),e._v(" "),t("h4",{attrs:{id:"本地操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地操作"}},[e._v("#")]),e._v(" 本地操作")]),e._v(" "),t("ol",[t("li",[e._v("修改本地settings.xml 上面指定私库的账号密码。")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("div",{staticClass:"highlight-lines"},[t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("br"),t("br")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0"\n          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">\n          \n  <servers>\n\t<server>\n\t  <id>test</id>\n      <username>tosinjia</username>\n      <password>tj123456</password>\n\t</server>\n  </servers>\n</settings>\n')])])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("创建一个Maven项目 pop.xml如下")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("div",{staticClass:"highlight-lines"},[t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("div",{staticClass:"highlighted"},[e._v(" ")]),t("br"),t("br"),t("br")]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.tosin.utils</groupId>\n  <artifactId>tosin-utils</artifactId>\n  \x3c!--注意限定版本一定为RELEASE,因为上传的对应仓库的存储类型为RELEASE--\x3e\n  <version>1.0-RELEASE</version>\n  <packaging>jar</packaging>\n\n  <name>tosin-utils</name>\n  \x3c!-- FIXME change it to the project\'s website --\x3e\n  <url>http://www.example.com</url>\n\n  \x3c!--指定仓库地址--\x3e\n  <distributionManagement>\n    <repository>\n      \x3c!--此名称要和settings.xml中设置的ID一致--\x3e\n      <id>test</id>\n      <url>http://192.168.56.106:8081/repository/test-release/</url>\n    </repository>\n  </distributionManagement>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <maven.compiler.source>1.7</maven.compiler.source>\n    <maven.compiler.target>1.7</maven.compiler.target>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>4.11</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <plugins>\n      \x3c!--发布代码Jar插件--\x3e\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-deploy-plugin</artifactId>\n        <version>2.7</version>\n      </plugin>\n      \x3c!--发布源码插件--\x3e\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-source-plugin</artifactId>\n        <version>2.2.1</version>\n        <executions>\n          <execution>\n            <phase>package</phase>\n            <goals>\n              <goal>jar</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n')])])]),t("ol",{attrs:{start:"3"}},[t("li",[e._v("mvn deploy")]),e._v(" "),t("li",[e._v("上传成功，回到Nexus的网页中search查看结果。")])]),e._v(" "),t("h4",{attrs:{id:"测试依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试依赖"}},[e._v("#")]),e._v(" 测试依赖")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("    <dependencies>\n        <dependency>\n            <groupId>com.tosin.utils</groupId>\n            <artifactId>tosin-utils</artifactId>\n            <version>1.0-RELEASE</version>\n        </dependency>\n    </dependencies>\n    <repositories>\n        <repository>\n            <id>test</id>\n            <url>http://192.168.56.106:8081/repository/test-release/</url>\n        </repository>\n    </repositories>\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);